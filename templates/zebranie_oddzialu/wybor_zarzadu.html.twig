{% extends 'base.html.twig' %}

{% block title %}Wybór Zarządu - {{ zebranie.oddzial.nazwa }} - CRM Nowa Nadzieja{% endblock %}

{% block page_title %}Wybór Zarządu Oddziału{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        body {
            background: #ffffff;
            min-height: 100vh;
        }

        .main-container {
            max-width: 800px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .wizard-header {
            background: #ffffff;
            border: 1px solid #e5e7eb;
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            text-align: center;
        }

        .wizard-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            color: white;
            font-size: 2rem;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
        }

        .wizard-title {
            color: #333;
            font-size: 1.75rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .wizard-subtitle {
            color: #666;
            font-size: 1rem;
        }

        .selection-grid {
            display: grid;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .selection-card {
            background: #ffffff;
            border: 1px solid #e5e7eb;
            border-radius: 20px;
            padding: 2rem;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            position: relative;
            overflow: hidden;
        }

        .selection-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);
            transition: left 0.6s ease;
        }

        .selection-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            border-color: #667eea;
        }

        .selection-card:hover::before {
            left: 100%;
        }

        .position-header {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
            position: relative;
            z-index: 2;
        }

        .position-icon {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.25rem;
            margin-right: 1rem;
            box-shadow: 0 8px 16px rgba(102, 126, 234, 0.2);
        }

        .position-info h4 {
            color: #333;
            font-size: 1.1rem;
            font-weight: 600;
            margin: 0;
            line-height: 1.2;
        }

        .position-info p {
            color: #666;
            font-size: 0.875rem;
            margin: 0.25rem 0 0 0;
        }

        .position-badge {
            margin-left: auto;
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .badge-required {
            background: linear-gradient(135deg, #ef4444, #dc2626);
            color: white;
            box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
        }

        .badge-optional {
            background: linear-gradient(135deg, #6b7280, #4b5563);
            color: white;
            box-shadow: 0 4px 12px rgba(107, 114, 128, 0.3);
        }

        .enhanced-select {
            position: relative;
            margin-bottom: 0.5rem;
        }

        .form-select {
            width: 100%;
            padding: 1rem 1.25rem;
            border: 2px solid #e5e7eb;
            border-radius: 15px;
            background: white;
            font-size: 1rem;
            font-weight: 500;
            color: #333;
            transition: all 0.3s ease;
            appearance: none;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 1rem center;
            background-repeat: no-repeat;
            background-size: 1.5em 1.5em;
        }

        .form-select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            transform: translateY(-1px);
        }

        .form-select option {
            padding: 0.75rem;
            font-weight: 500;
        }

        .form-select option:disabled {
            color: #9ca3af;
            background-color: #f3f4f6;
        }

        .validation-error {
            color: #ef4444;
            font-size: 0.875rem;
            font-weight: 500;
            margin-top: 0.5rem;
            padding: 0.5rem 0.75rem;
            background: rgba(239, 68, 68, 0.1);
            border-radius: 8px;
            border: 1px solid rgba(239, 68, 68, 0.2);
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            align-items: center;
            margin-top: 3rem;
        }

        .btn-back {
            padding: 1rem 1.5rem;
            background: #ffffff;
            border: 2px solid #d1d5db;
            border-radius: 15px;
            color: #6b7280;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-back:hover {
            background: #f9fafb;
            border-color: #6b7280;
            color: #374151;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }

        .btn-submit {
            padding: 1rem 2rem;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border: none;
            border-radius: 15px;
            color: white;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
            display: flex;
            align-items: center;
            gap: 0.75rem;
            position: relative;
            overflow: hidden;
        }

        .btn-submit::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.6s ease;
        }

        .btn-submit:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 30px rgba(102, 126, 234, 0.4);
        }

        .btn-submit:hover::before {
            left: 100%;
        }

        .btn-submit:active {
            transform: translateY(-1px);
        }

        .info-banner {
            background: #f0f9ff;
            border: 1px solid #bae6fd;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
        }

        .info-banner h6 {
            color: #0ea5e9;
            font-weight: 600;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .info-banner p {
            color: #0369a1;
            margin: 0;
            line-height: 1.6;
        }

        .progress-indicator {
            display: flex;
            justify-content: center;
            margin: 2rem 0;
        }

        .progress-step {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }

        @media (max-width: 768px) {
            .main-container {
                margin: 1rem auto;
                padding: 0 1rem;
            }
            
            .wizard-header {
                padding: 1.5rem;
                margin-bottom: 1.5rem;
            }
            
            .wizard-icon {
                width: 60px;
                height: 60px;
                font-size: 1.5rem;
            }
            
            .wizard-title {
                font-size: 1.5rem;
            }
            
            .selection-card {
                padding: 1.5rem;
            }
            
            .action-buttons {
                flex-direction: column-reverse;
            }
            
            .btn-submit, .btn-back {
                width: 100%;
                justify-content: center;
            }
        }

        .member-card {
            display: flex;
            align-items: center;
            padding: 0.75rem;
            margin: 0.25rem 0;
            border-radius: 10px;
            transition: all 0.2s ease;
        }

        .member-avatar {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            margin-right: 0.75rem;
            font-size: 0.875rem;
        }

        .selected-preview {
            background: rgba(102, 126, 234, 0.1);
            border: 2px solid rgba(102, 126, 234, 0.3);
            border-radius: 15px;
            padding: 1rem;
            margin-top: 1rem;
            display: none;
        }

        .selected-preview.show {
            display: block;
            animation: fadeInUp 0.3s ease;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
{% endblock %}

{% block body %}
    <div class="main-container">
        <!-- Wizard Header -->
        <div class="wizard-header">
            <div class="wizard-icon">
                <i class="fas fa-users-cog"></i>
            </div>
            <h1 class="wizard-title">Wybór Zarządu Oddziału</h1>
            <p class="wizard-subtitle">{{ zebranie.oddzial.nazwa }}</p>
        </div>

        <!-- Progress Indicator -->
        <div class="progress-indicator">
            <div class="progress-step">3</div>
        </div>

        <!-- Info Banner -->
        <div class="info-banner">
            <h6><i class="fas fa-info-circle"></i> Instrukcja</h6>
            <p>
                Prowadzący i protokolant wspólnie wyznaczają członków zarządu oddziału. 
                <strong>Przewodniczący i sekretarz są wymagani</strong>, zastępcy są opcjonalni (maksymalnie 2).
                Każda osoba może pełnić tylko jedną funkcję w zarządzie.
            </p>
        </div>

        <!-- Selection Form -->
        <form method="POST" action="{{ path('zebranie_wybor_zarzadu', {id: zebranie.id}) }}" onsubmit="return validateForm()" id="board-selection-form">
            <div class="selection-grid">
                
                <!-- Przewodniczący -->
                <div class="selection-card" data-position="przewodniczacy">
                    <div class="position-header">
                        <div class="position-icon">
                            <i class="fas fa-crown"></i>
                        </div>
                        <div class="position-info">
                            <h4>Przewodniczący Oddziału</h4>
                            <p>Kieruje pracą zarządu i reprezentuje oddział</p>
                        </div>
                        <div class="position-badge badge-required">Wymagany</div>
                    </div>
                    
                    <div class="enhanced-select">
                        <select name="przewodniczacy" id="przewodniczacy" class="form-select" required>
                            <option value="">Wybierz przewodniczącego...</option>
                            {% for czlonek in czlonkowie %}
                                <option value="{{ czlonek.id }}" data-name="{{ czlonek.fullName }}" data-email="{{ czlonek.email }}">
                                    {{ czlonek.fullName }}
                                </option>
                            {% endfor %}
                        </select>
                        <div id="przewodniczacy-error" class="validation-error" style="display: none;"></div>
                    </div>
                </div>

                <!-- Pierwszy Zastępca -->
                <div class="selection-card" data-position="zastepca1">
                    <div class="position-header">
                        <div class="position-icon">
                            <i class="fas fa-user-tie"></i>
                        </div>
                        <div class="position-info">
                            <h4>Pierwszy Zastępca Przewodniczącego</h4>
                            <p>Wspiera przewodniczącego w zarządzaniu oddziałem</p>
                        </div>
                        <div class="position-badge badge-optional">Opcjonalny</div>
                    </div>
                    
                    <div class="enhanced-select">
                        <select name="zastepca1" id="zastepca1" class="form-select">
                            <option value="">Brak</option>
                            {% for czlonek in czlonkowie %}
                                <option value="{{ czlonek.id }}" data-name="{{ czlonek.fullName }}" data-email="{{ czlonek.email }}">
                                    {{ czlonek.fullName }}
                                </option>
                            {% endfor %}
                        </select>
                        <div id="zastepca1-error" class="validation-error" style="display: none;"></div>
                    </div>
                </div>

                <!-- Drugi Zastępca -->
                <div class="selection-card" data-position="zastepca2">
                    <div class="position-header">
                        <div class="position-icon">
                            <i class="fas fa-user-shield"></i>
                        </div>
                        <div class="position-info">
                            <h4>Drugi Zastępca Przewodniczącego</h4>
                            <p>Dodatkowe wsparcie dla kierownictwa oddziału</p>
                        </div>
                        <div class="position-badge badge-optional">Opcjonalny</div>
                    </div>
                    
                    <div class="enhanced-select">
                        <select name="zastepca2" id="zastepca2" class="form-select">
                            <option value="">Brak</option>
                            {% for czlonek in czlonkowie %}
                                <option value="{{ czlonek.id }}" data-name="{{ czlonek.fullName }}" data-email="{{ czlonek.email }}">
                                    {{ czlonek.fullName }}
                                </option>
                            {% endfor %}
                        </select>
                        <div id="zastepca2-error" class="validation-error" style="display: none;"></div>
                    </div>
                </div>

                <!-- Sekretarz -->
                <div class="selection-card" data-position="sekretarz">
                    <div class="position-header">
                        <div class="position-icon">
                            <i class="fas fa-file-signature"></i>
                        </div>
                        <div class="position-info">
                            <h4>Sekretarz Oddziału</h4>
                            <p>Prowadzi dokumentację i korespondencję oddziału</p>
                        </div>
                        <div class="position-badge badge-required">Wymagany</div>
                    </div>
                    
                    <div class="enhanced-select">
                        <select name="sekretarz" id="sekretarz" class="form-select" required>
                            <option value="">Wybierz sekretarza...</option>
                            {% for czlonek in czlonkowie %}
                                <option value="{{ czlonek.id }}" data-name="{{ czlonek.fullName }}" data-email="{{ czlonek.email }}">
                                    {{ czlonek.fullName }}
                                </option>
                            {% endfor %}
                        </select>
                        <div id="sekretarz-error" class="validation-error" style="display: none;"></div>
                    </div>
                </div>

            </div>

            <!-- Selected Preview -->
            <div id="selected-preview" class="selected-preview">
                <h6><i class="fas fa-eye me-2"></i>Podgląd wybranego zarządu</h6>
                <div id="preview-content"></div>
            </div>

            <!-- Action Buttons -->
            <div class="action-buttons">
                <a href="{{ path('zebranie_wizard', {id: zebranie.id}) }}" class="btn-back">
                    <i class="fas fa-arrow-left"></i>
                    Powrót do kreatora
                </a>
                <button type="submit" class="btn-submit" id="submit-btn" disabled>
                    <i class="fas fa-check"></i>
                    Zatwierdź zarząd
                    <div class="spinner" id="submit-spinner" style="display: none;">
                        <i class="fas fa-spinner fa-spin"></i>
                    </div>
                </button>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('board-selection-form');
            const submitBtn = document.getElementById('submit-btn');
            const previewDiv = document.getElementById('selected-preview');
            const previewContent = document.getElementById('preview-content');
            const selects = document.querySelectorAll('select');
            
            // Initialize interactions
            initializeSelects();
            updateSubmitButton();
            updatePreview();
            
            function initializeSelects() {
                selects.forEach(select => {
                    select.addEventListener('change', function() {
                        clearErrors();
                        updateAvailableOptions();
                        updatePreview();
                        updateSubmitButton();
                        addSelectionAnimation(this);
                    });
                    
                    // Add focus animations
                    select.addEventListener('focus', function() {
                        this.closest('.selection-card').style.transform = 'translateY(-4px)';
                        this.closest('.selection-card').style.boxShadow = '0 12px 30px rgba(102, 126, 234, 0.2)';
                    });
                    
                    select.addEventListener('blur', function() {
                        this.closest('.selection-card').style.transform = 'translateY(-8px)';
                        this.closest('.selection-card').style.boxShadow = '0 20px 40px rgba(0, 0, 0, 0.15)';
                    });
                });
            }
            
            function addSelectionAnimation(select) {
                const card = select.closest('.selection-card');
                card.style.animation = 'none';
                setTimeout(() => {
                    card.style.animation = 'pulse 0.6s ease';
                }, 10);
            }
            
            function updateAvailableOptions() {
                const selected = Array.from(selects)
                    .map(select => select.value)
                    .filter(value => value);
                
                selects.forEach(select => {
                    const currentValue = select.value;
                    const options = select.querySelectorAll('option');
                    
                    options.forEach(option => {
                        if (option.value && option.value !== currentValue && selected.includes(option.value)) {
                            option.disabled = true;
                            option.style.color = '#9ca3af';
                            if (!option.textContent.includes('(już wybrano)')) {
                                option.textContent += ' (już wybrano)';
                            }
                        } else {
                            option.disabled = false;
                            option.style.color = '';
                            option.textContent = option.textContent.replace(' (już wybrano)', '');
                        }
                    });
                });
            }
            
            function updatePreview() {
                const selections = {
                    przewodniczacy: getSelectionData('przewodniczacy'),
                    zastepca1: getSelectionData('zastepca1'),
                    zastepca2: getSelectionData('zastepca2'),
                    sekretarz: getSelectionData('sekretarz')
                };
                
                const hasSelections = Object.values(selections).some(sel => sel.name);
                
                if (hasSelections) {
                    previewDiv.classList.add('show');
                    previewContent.innerHTML = generatePreviewHTML(selections);
                } else {
                    previewDiv.classList.remove('show');
                }
            }
            
            function getSelectionData(id) {
                const select = document.getElementById(id);
                const selectedOption = select.options[select.selectedIndex];
                return {
                    name: selectedOption.dataset.name || '',
                    email: selectedOption.dataset.email || '',
                    value: select.value
                };
            }
            
            function generatePreviewHTML(selections) {
                let html = '<div style="display: grid; gap: 0.75rem;">';
                
                const positions = [
                    { key: 'przewodniczacy', icon: 'fas fa-crown', label: 'Przewodniczący', required: true },
                    { key: 'zastepca1', icon: 'fas fa-user-tie', label: '1. Zastępca', required: false },
                    { key: 'zastepca2', icon: 'fas fa-user-shield', label: '2. Zastępca', required: false },
                    { key: 'sekretarz', icon: 'fas fa-file-signature', label: 'Sekretarz', required: true }
                ];
                
                positions.forEach(pos => {
                    const selection = selections[pos.key];
                    if (selection.name) {
                        html += `
                            <div style="display: flex; align-items: center; padding: 0.75rem; background: rgba(255,255,255,0.7); border-radius: 10px;">
                                <div style="width: 35px; height: 35px; border-radius: 50%; background: linear-gradient(135deg, #667eea, #764ba2); display: flex; align-items: center; justify-content: center; color: white; margin-right: 0.75rem;">
                                    <i class="${pos.icon}" style="font-size: 0.875rem;"></i>
                                </div>
                                <div>
                                    <div style="font-weight: 600; color: #333; font-size: 0.9rem;">${pos.label}</div>
                                    <div style="color: #666; font-size: 0.875rem;">${selection.name}</div>
                                </div>
                            </div>
                        `;
                    } else if (pos.required) {
                        html += `
                            <div style="display: flex; align-items: center; padding: 0.75rem; background: rgba(239,68,68,0.1); border-radius: 10px; border: 1px dashed rgba(239,68,68,0.3);">
                                <div style="width: 35px; height: 35px; border-radius: 50%; background: #ef4444; display: flex; align-items: center; justify-content: center; color: white; margin-right: 0.75rem;">
                                    <i class="${pos.icon}" style="font-size: 0.875rem;"></i>
                                </div>
                                <div>
                                    <div style="font-weight: 600; color: #ef4444; font-size: 0.9rem;">${pos.label}</div>
                                    <div style="color: #ef4444; font-size: 0.875rem;">Wymagane - nie wybrano</div>
                                </div>
                            </div>
                        `;
                    }
                });
                
                html += '</div>';
                return html;
            }
            
            function updateSubmitButton() {
                const przewodniczacy = document.getElementById('przewodniczacy').value;
                const sekretarz = document.getElementById('sekretarz').value;
                const isValid = przewodniczacy && sekretarz;
                
                submitBtn.disabled = !isValid;
                if (isValid) {
                    submitBtn.style.opacity = '1';
                    submitBtn.style.cursor = 'pointer';
                } else {
                    submitBtn.style.opacity = '0.6';
                    submitBtn.style.cursor = 'not-allowed';
                }
            }
            
            function clearErrors() {
                document.querySelectorAll('.validation-error').forEach(el => {
                    el.style.display = 'none';
                    el.textContent = '';
                });
            }
            
            function showError(fieldId, message) {
                const errorEl = document.getElementById(fieldId + '-error');
                errorEl.textContent = message;
                errorEl.style.display = 'block';
                
                // Scroll to error
                document.getElementById(fieldId).closest('.selection-card').scrollIntoView({
                    behavior: 'smooth',
                    block: 'center'
                });
            }
            
            // Form validation
            window.validateForm = function() {
                clearErrors();
                
                const przewodniczacy = document.getElementById('przewodniczacy').value;
                const zastepca1 = document.getElementById('zastepca1').value;
                const zastepca2 = document.getElementById('zastepca2').value;
                const sekretarz = document.getElementById('sekretarz').value;
                
                let isValid = true;
                
                // Check required fields
                if (!przewodniczacy) {
                    showError('przewodniczacy', 'Przewodniczący jest wymagany');
                    isValid = false;
                }
                
                if (!sekretarz) {
                    showError('sekretarz', 'Sekretarz jest wymagany');
                    isValid = false;
                }
                
                // Check duplicates
                const selected = [przewodniczacy, zastepca1, zastepca2, sekretarz].filter(v => v);
                const unique = [...new Set(selected)];
                
                if (selected.length !== unique.length) {
                    // Find which fields have duplicates
                    const counts = {};
                    selected.forEach(id => counts[id] = (counts[id] || 0) + 1);
                    
                    Object.entries(counts).forEach(([id, count]) => {
                        if (count > 1) {
                            if (przewodniczacy === id) showError('przewodniczacy', 'Ta osoba jest już wybrana na inną funkcję');
                            if (zastepca1 === id) showError('zastepca1', 'Ta osoba jest już wybrana na inną funkcję');
                            if (zastepca2 === id) showError('zastepca2', 'Ta osoba jest już wybrana na inną funkcję');
                            if (sekretarz === id) showError('sekretarz', 'Ta osoba jest już wybrana na inną funkcję');
                        }
                    });
                    isValid = false;
                }
                
                if (!isValid) {
                    // Shake animation for errors
                    document.querySelectorAll('.validation-error[style*="block"]').forEach(el => {
                        el.closest('.selection-card').style.animation = 'shake 0.6s ease';
                    });
                    return false;
                }
                
                // Show loading state
                const spinner = document.getElementById('submit-spinner');
                submitBtn.style.pointerEvents = 'none';
                submitBtn.querySelector('i:first-child').style.display = 'none';
                spinner.style.display = 'inline-block';
                
                return true;
            };
            
            // Add CSS animations
            const style = document.createElement('style');
            style.textContent = `
                @keyframes pulse {
                    0% { transform: translateY(-8px) scale(1); }
                    50% { transform: translateY(-8px) scale(1.02); }
                    100% { transform: translateY(-8px) scale(1); }
                }
                
                @keyframes shake {
                    0%, 100% { transform: translateX(0) translateY(-8px); }
                    25% { transform: translateX(-5px) translateY(-8px); }
                    75% { transform: translateX(5px) translateY(-8px); }
                }
            `;
            document.head.appendChild(style);
        });
    </script>
{% endblock %}