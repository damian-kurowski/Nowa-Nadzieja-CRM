{% extends 'base.html.twig' %}

{% block title %}Rozliczenia składek - Panel Skarbnika{% endblock %}

{% block body %}
<!-- Enhanced Treasurer Header -->
<div class="treasurer-header">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <div class="header-content">
                    <h1 class="page-title">
                        <div class="title-icon">
                            <i class="fas fa-calculator"></i>
                        </div>
                        Panel Skarbnika
                    </h1>
                    <p class="page-subtitle">Zarządzanie rozliczeniami składek członkowskich</p>
                </div>
            </div>
            <div class="col-lg-4 text-lg-end">
                <div class="header-actions">
                    <div class="btn-group" role="group">
                        <a href="{{ path('app_payment_import') }}" 
                           class="btn btn-enhanced btn-success-gradient">
                            <i class="fas fa-file-upload me-2"></i>Nowy import
                        </a>
                        <button class="btn btn-enhanced btn-info-gradient" onclick="refreshDashboard()">
                            <i class="fas fa-sync-alt me-2"></i>Odśwież
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <!-- Enhanced Quick Import Card -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="import-spotlight-card">
                <div class="spotlight-content">
                    <div class="spotlight-icon">
                        <i class="fas fa-cloud-upload-alt"></i>
                    </div>
                    <div class="spotlight-text">
                        <h2>Importuj płatności CSV</h2>
                        <p>Szybkie przetwarzanie danych z systemu bankowego z automatycznym dopasowaniem PESEL</p>
                        <div class="spotlight-features">
                            <div class="feature-item">
                                <i class="fas fa-check-circle"></i>
                                <span>Automatyczne dopasowanie członków</span>
                            </div>
                            <div class="feature-item">
                                <i class="fas fa-chart-line"></i>
                                <span>Raportowanie błędów i statystyki</span>
                            </div>
                            <div class="feature-item">
                                <i class="fas fa-shield-alt"></i>
                                <span>Bezpieczne przetwarzanie danych</span>
                            </div>
                        </div>
                    </div>
                    <div class="spotlight-actions">
                        <a href="{{ path('app_payment_import') }}" class="btn btn-enhanced btn-primary-gradient btn-lg">
                            <i class="fas fa-file-upload me-2"></i>Rozpocznij import
                        </a>
                        <button class="btn btn-enhanced btn-outline-secondary" onclick="showImportHelp()">
                            <i class="fas fa-question-circle me-2"></i>Pomoc
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Statistics Dashboard -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="stats-overview-card">
                <div class="stats-header">
                    <h3><i class="fas fa-chart-bar me-2"></i>Przegląd statystyk</h3>
                    <div class="stats-period">
                        <select class="form-select form-select-sm" onchange="updateStatsPeriod(this.value)">
                            <option value="today">Dzisiaj</option>
                            <option value="week" selected>Ostatni tydzień</option>
                            <option value="month">Ostatni miesiąc</option>
                            <option value="year">Ostatni rok</option>
                        </select>
                    </div>
                </div>
                <div class="stats-grid">
                    <div class="stat-card imports">
                        <div class="stat-icon">
                            <i class="fas fa-file-import"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">{{ statistics.imports_count }}</div>
                            <div class="stat-label">Importów</div>
                            <div class="stat-change {{ statistics.imports_trend == 'up' ? 'success' : 'danger' }}">
                                <i class="fas fa-arrow-{{ statistics.imports_trend }}"></i>
                                <span>{{ statistics.imports_change >= 0 ? '+' : '' }}{{ statistics.imports_change }}%</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="stat-card payments">
                        <div class="stat-icon">
                            <i class="fas fa-coins"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">{{ statistics.payments_count }}</div>
                            <div class="stat-label">Wpłat</div>
                            <div class="stat-change {{ statistics.payments_trend == 'up' ? 'success' : 'danger' }}">
                                <i class="fas fa-arrow-{{ statistics.payments_trend }}"></i>
                                <span>{{ statistics.payments_change >= 0 ? '+' : '' }}{{ statistics.payments_change }}%</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="stat-card matched">
                        <div class="stat-icon">
                            <i class="fas fa-check-double"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">{{ statistics.matched_count }}</div>
                            <div class="stat-label">Dopasowanych</div>
                            <div class="stat-change {{ statistics.matched_trend == 'up' ? 'success' : 'danger' }}">
                                <i class="fas fa-arrow-{{ statistics.matched_trend }}"></i>
                                <span>{{ statistics.matched_change >= 0 ? '+' : '' }}{{ statistics.matched_change }}%</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="stat-card errors">
                        <div class="stat-icon">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">{{ statistics.errors_count }}</div>
                            <div class="stat-label">Błędów</div>
                            <div class="stat-change {{ statistics.errors_trend == 'down' ? 'success' : 'danger' }}">
                                <i class="fas fa-arrow-{{ statistics.errors_trend }}"></i>
                                <span>{{ statistics.errors_change >= 0 ? '+' : '' }}{{ statistics.errors_change }}%</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
    </div>

    <!-- Enhanced Recent Activities -->
    <div class="row">
        <div class="col-lg-7">
            <div class="recent-imports-card">
                <div class="card-header">
                    <h3><i class="fas fa-history me-2"></i>Ostatnie importy</h3>
                    <div class="header-actions">
                        <button class="btn btn-sm btn-outline-primary" onclick="refreshImports()">
                            <i class="fas fa-sync-alt"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    {% if recentImports|length > 0 %}
                    <div class="imports-timeline">
                        {% for import in recentImports %}
                        <div class="import-timeline-item">
                            <div class="timeline-marker 
                                {% if import.liczbaBlednych == 0 %}success{% elseif import.liczbaBlednych < 5 %}warning{% else %}danger{% endif %}">
                                {% if import.liczbaBlednych == 0 %}
                                    <i class="fas fa-check"></i>
                                {% elseif import.liczbaBlednych < 5 %}
                                    <i class="fas fa-exclamation"></i>
                                {% else %}
                                    <i class="fas fa-times"></i>
                                {% endif %}
                            </div>
                            <div class="timeline-content">
                                <div class="import-card">
                                    <div class="import-header">
                                        <div class="import-filename">
                                            <i class="fas fa-file-csv me-2"></i>
                                            <span title="{{ import.nazwaPliku }}">{{ import.nazwaPliku|slice(0, 30) }}{% if import.nazwaPliku|length > 30 %}...{% endif %}</span>
                                        </div>
                                        <div class="import-date">
                                            {{ import.dataImportu|date('d.m.Y H:i') }}
                                        </div>
                                    </div>
                                    <div class="import-stats">
                                        <div class="import-stat success">
                                            <div class="stat-number">{{ import.liczbaDopasowanych }}</div>
                                            <div class="stat-label">Dopasowane</div>
                                        </div>
                                        {% if import.liczbaBlednych > 0 %}
                                        <div class="import-stat error">
                                            <div class="stat-number">{{ import.liczbaBlednych }}</div>
                                            <div class="stat-label">Błędy</div>
                                        </div>
                                        {% endif %}
                                        <div class="import-stat">
                                            <div class="stat-number">{{ import.procentDopasowań }}%</div>
                                            <div class="stat-label">Skuteczność</div>
                                        </div>
                                    </div>
                                    <div class="import-actions">
                                        <a href="{{ path('app_payment_import_report', {id: import.id}) }}" 
                                           class="btn btn-sm btn-outline-info">
                                            <i class="fas fa-eye me-1"></i>Raport
                                        </a>
                                        {% if import.liczbaBlednych > 0 %}
                                        <a href="{{ path('app_payment_import_errors_download', {id: import.id}) }}" 
                                           class="btn btn-sm btn-outline-warning">
                                            <i class="fas fa-download me-1"></i>Błędy
                                        </a>
                                        {% endif %}
                                    </div>
                                </div>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                    {% else %}
                    <div class="empty-state-small">
                        <div class="empty-icon">
                            <i class="fas fa-file-import"></i>
                        </div>
                        <p>Nie przeprowadzono jeszcze żadnych importów</p>
                        <a href="{{ path('app_payment_import') }}" class="btn btn-primary btn-sm">
                            <i class="fas fa-plus me-1"></i>Pierwszy import
                        </a>
                    </div>
                    {% endif %}
                </div>
            </div>
        </div>

        <div class="col-lg-5">
            <div class="recent-payments-card">
                <div class="card-header">
                    <h3><i class="fas fa-coins me-2"></i>Ostatnie wpłaty</h3>
                    <div class="header-actions">
                        <button class="btn btn-sm btn-outline-primary" onclick="refreshPayments()">
                            <i class="fas fa-sync-alt"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    {% if recentPayments|length > 0 %}
                    <div class="payments-list">
                        {% for payment in recentPayments %}
                        <div class="payment-list-item">
                            <div class="payment-status">
                                {% if payment.statusPlatnosci == 'potwierdzona' %}
                                    <div class="status-indicator success">
                                        <i class="fas fa-check"></i>
                                    </div>
                                {% elseif payment.statusPlatnosci == 'oczekujaca' %}
                                    <div class="status-indicator warning">
                                        <i class="fas fa-clock"></i>
                                    </div>
                                {% else %}
                                    <div class="status-indicator danger">
                                        <i class="fas fa-times"></i>
                                    </div>
                                {% endif %}
                            </div>
                            <div class="payment-content">
                                <div class="payment-member">
                                    <strong>{{ payment.darczyca.imie }} {{ payment.darczyca.nazwisko }}</strong>
                                </div>
                                <div class="payment-amount">{{ payment.kwota }} PLN</div>
                                <div class="payment-date">
                                    {% if payment.dataKsiegowania %}
                                        {{ payment.dataKsiegowania|date('d.m.Y') }}
                                    {% else %}
                                        {{ payment.dataRejestracji|date('d.m.Y') }}
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                    {% else %}
                    <div class="empty-state-small">
                        <div class="empty-icon">
                            <i class="fas fa-coins"></i>
                        </div>
                        <p>Brak ostatnich wpłat</p>
                    </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function refreshDashboard() {
    location.reload();
}

function showImportHelp() {
    alert('Pomoc:\n\n1. Przygotuj plik CSV z danymi bankowymi\n2. Upewnij się, że zawiera kolumnę z tytułem przelewu\n3. System automatycznie dopasuje PESEL z tytułów\n4. Sprawdź raport po imporcie');
}

function updateStatsPeriod(period) {
    // Pokazuj loading na kartach statystyk
    const statCards = document.querySelectorAll('.stat-card');
    statCards.forEach(card => {
        card.classList.add('loading');
        const value = card.querySelector('.stat-value');
        if (value) value.textContent = '...';
    });

    // Wywołaj endpoint AJAX
    fetch(`/payments/admin/stats/${period}`, {
        method: 'GET',
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => response.json())
    .then(data => {
        updateStatCards(data);
        statCards.forEach(card => card.classList.remove('loading'));
    })
    .catch(error => {
        console.error('Error updating stats:', error);
        statCards.forEach(card => card.classList.remove('loading'));
        alert('Błąd podczas aktualizacji statystyk');
    });
}

function updateStatCards(stats) {
    // Aktualizuj karty statystyk
    const cards = {
        'imports': {
            value: stats.imports_count,
            change: stats.imports_change,
            trend: stats.imports_trend
        },
        'payments': {
            value: stats.payments_count,
            change: stats.payments_change,
            trend: stats.payments_trend
        },
        'matched': {
            value: stats.matched_count,
            change: stats.matched_change,
            trend: stats.matched_trend
        },
        'errors': {
            value: stats.errors_count,
            change: stats.errors_change,
            trend: stats.errors_trend
        }
    };

    Object.keys(cards).forEach(cardType => {
        const card = document.querySelector(`.stat-card.${cardType}`);
        if (card) {
            const valueElement = card.querySelector('.stat-value');
            const changeElement = card.querySelector('.stat-change');
            const iconElement = changeElement.querySelector('i');
            const spanElement = changeElement.querySelector('span');

            if (valueElement) valueElement.textContent = cards[cardType].value;
            if (spanElement) {
                const change = cards[cardType].change;
                spanElement.textContent = `${change >= 0 ? '+' : ''}${change}%`;
            }
            if (iconElement) {
                iconElement.className = `fas fa-arrow-${cards[cardType].trend}`;
            }
            
            // Zaktualizuj klasy CSS dla kolorów
            changeElement.className = changeElement.className.replace(/\b(success|danger)\b/g, '');
            const isPositive = (cardType === 'errors') ? 
                cards[cardType].trend === 'down' : cards[cardType].trend === 'up';
            changeElement.classList.add(isPositive ? 'success' : 'danger');
        }
    });
}

function runSystemCheck() {
    alert('Sprawdzanie systemu... Wszystko działa poprawnie!');
}

function exportSystemReport() {
    alert('Eksportowanie raportu systemu...');
}

function refreshImports() {
    location.reload();
}

function refreshPayments() {
    location.reload();
}
</script>

<style>
/* Enhanced Treasurer Panel Styles */
.treasurer-header {
    background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 2rem;
    color: white;
    position: relative;
    overflow: hidden;
}

.treasurer-header::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
    animation: float 25s ease-in-out infinite;
}

.btn-enhanced {
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    border-radius: 12px;
    transition: all 0.3s ease;
    border: none;
    position: relative;
    overflow: hidden;
}

.btn-success-gradient {
    background: linear-gradient(135deg, #28a745, #20c997);
    color: white;
}

.btn-info-gradient {
    background: linear-gradient(135deg, #17a2b8, #138496);
    color: white;
}

.btn-primary-gradient {
    background: linear-gradient(135deg, #007bff, #0056b3);
    color: white;
}

.btn-enhanced:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.2);
}

/* Import Spotlight Card */
.import-spotlight-card {
    background: linear-gradient(135deg, rgba(40, 167, 69, 0.05), rgba(32, 201, 151, 0.02));
    border: 2px solid rgba(40, 167, 69, 0.2);
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 2rem;
    position: relative;
    overflow: hidden;
}

.spotlight-content {
    display: grid;
    grid-template-columns: auto 1fr auto;
    gap: 2rem;
    align-items: center;
}

.spotlight-icon {
    width: 80px;
    height: 80px;
    background: linear-gradient(135deg, #28a745, #20c997);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    color: white;
    box-shadow: 0 8px 25px rgba(40, 167, 69, 0.3);
}

.spotlight-text h2 {
    font-size: 1.75rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    color: var(--text-primary);
}

.spotlight-text p {
    color: var(--text-secondary);
    margin-bottom: 1rem;
}

.spotlight-features {
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
}

.feature-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-secondary);
    font-size: 0.9rem;
}

.feature-item i {
    color: #28a745;
}

.spotlight-actions {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

/* Statistics Overview */
.stats-overview-card {
    background: var(--bg-primary);
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    border: 1px solid var(--border-color);
}

.stats-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--border-color);
}

.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
}

.stat-card {
    background: var(--bg-secondary);
    border-radius: 15px;
    padding: 1.5rem;
    display: flex;
    align-items: center;
    transition: all 0.3s ease;
    border: 2px solid transparent;
}

.stat-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    border-color: rgba(102, 126, 234, 0.3);
}

.stat-card.imports {
    border-left: 4px solid #667eea;
}

.stat-card.payments {
    border-left: 4px solid #28a745;
}

.stat-card.matched {
    border-left: 4px solid #20c997;
}

.stat-card.errors {
    border-left: 4px solid #dc3545;
}

.stat-icon {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 1rem;
    font-size: 1.2rem;
    flex-shrink: 0;
}

.stat-card.imports .stat-icon {
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.2), rgba(118, 75, 162, 0.1));
    color: #667eea;
}

.stat-card.payments .stat-icon {
    background: linear-gradient(135deg, rgba(40, 167, 69, 0.2), rgba(32, 201, 151, 0.1));
    color: #28a745;
}

.stat-card.matched .stat-icon {
    background: linear-gradient(135deg, rgba(32, 201, 151, 0.2), rgba(23, 162, 184, 0.1));
    color: #20c997;
}

.stat-card.errors .stat-icon {
    background: linear-gradient(135deg, rgba(220, 53, 69, 0.2), rgba(200, 35, 51, 0.1));
    color: #dc3545;
}

.stat-content {
    flex: 1;
}

.stat-value {
    font-size: 2rem;
    font-weight: 700;
    color: var(--text-primary);
    line-height: 1;
    margin-bottom: 0.25rem;
}

.stat-label {
    font-size: 0.9rem;
    color: var(--text-secondary);
    margin-bottom: 0.5rem;
}

.stat-change {
    display: flex;
    align-items: center;
    font-size: 0.85rem;
    font-weight: 600;
    color: #28a745;
}

.stat-change.success {
    color: #28a745;
}

.stat-change.danger {
    color: #dc3545;
}

.stat-change i {
    margin-right: 0.25rem;
}

/* Loading state */
.stat-card.loading {
    opacity: 0.6;
    pointer-events: none;
}

.stat-card.loading .stat-value {
    animation: pulse 1.5s ease-in-out infinite;
}

@keyframes pulse {
    0% { opacity: 0.6; }
    50% { opacity: 1; }
    100% { opacity: 0.6; }
}

/* Quick Stats Card */
.quick-stats-card {
    background: var(--bg-primary);
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    border: 1px solid var(--border-color);
    height: 100%;
}

.quick-stats-card .card-header {
    background: linear-gradient(135deg, rgba(23, 162, 184, 0.1), rgba(19, 132, 150, 0.05));
    border-bottom: 1px solid var(--border-color);
    padding: 1.5rem;
    border-radius: 20px 20px 0 0;
}

.system-status {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.status-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    background: var(--bg-secondary);
    border-radius: 8px;
    transition: all 0.3s ease;
}

.status-item:hover {
    transform: translateX(4px);
}

.status-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    flex-shrink: 0;
}

.status-indicator.success {
    background: #28a745;
    box-shadow: 0 0 8px rgba(40, 167, 69, 0.4);
}

.status-indicator.warning {
    background: #ffc107;
    box-shadow: 0 0 8px rgba(255, 193, 7, 0.4);
}

.status-indicator.danger {
    background: #dc3545;
    box-shadow: 0 0 8px rgba(220, 53, 69, 0.4);
}

/* Recent Activities Cards */
.recent-imports-card,
.recent-payments-card {
    background: var(--bg-primary);
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    border: 1px solid var(--border-color);
    height: 100%;
}

.recent-imports-card .card-header,
.recent-payments-card .card-header {
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.05));
    border-bottom: 1px solid var(--border-color);
    padding: 1.5rem;
    border-radius: 20px 20px 0 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.recent-imports-card .card-body,
.recent-payments-card .card-body {
    padding: 1.5rem;
    max-height: 600px;
    overflow-y: auto;
}

/* Imports Timeline */
.imports-timeline {
    position: relative;
}

.imports-timeline::before {
    content: '';
    position: absolute;
    left: 15px;
    top: 0;
    bottom: 0;
    width: 2px;
    background: linear-gradient(to bottom, #667eea, #764ba2);
}

.import-timeline-item {
    position: relative;
    margin-bottom: 1.5rem;
    display: flex;
    align-items: flex-start;
}

.import-timeline-item .timeline-marker {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
    position: relative;
    z-index: 2;
    margin-right: 1rem;
    flex-shrink: 0;
}

.timeline-marker.success {
    background: linear-gradient(135deg, #28a745, #20c997);
    color: white;
}

.timeline-marker.warning {
    background: linear-gradient(135deg, #ffc107, #fd7e14);
    color: #000;
}

.timeline-marker.danger {
    background: linear-gradient(135deg, #dc3545, #c82333);
    color: white;
}

.timeline-content {
    flex: 1;
    margin-top: -5px;
}

.import-card {
    background: var(--bg-secondary);
    border-radius: 12px;
    padding: 1rem;
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
}

.import-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0,0,0,0.1);
}

.import-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.75rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid var(--border-color);
}

.import-filename {
    display: flex;
    align-items: center;
    color: var(--text-primary);
    font-weight: 600;
    font-size: 0.9rem;
}

.import-date {
    font-size: 0.8rem;
    color: var(--text-secondary);
}

.import-stats {
    display: flex;
    gap: 1rem;
    margin-bottom: 0.75rem;
}

.import-stat {
    text-align: center;
}

.import-stat .stat-number {
    font-size: 1.1rem;
    font-weight: 700;
    color: var(--text-primary);
    line-height: 1;
}

.import-stat .stat-label {
    font-size: 0.75rem;
    color: var(--text-secondary);
}

.import-stat.success .stat-number {
    color: #28a745;
}

.import-stat.error .stat-number {
    color: #dc3545;
}

.import-actions {
    display: flex;
    gap: 0.5rem;
}

/* Payments List */
.payments-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.payment-list-item {
    display: flex;
    align-items: center;
    padding: 1rem;
    background: var(--bg-secondary);
    border-radius: 12px;
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
}

.payment-list-item:hover {
    transform: translateX(4px);
    box-shadow: 0 4px 16px rgba(0,0,0,0.1);
}

.payment-list-item .payment-status {
    margin-right: 1rem;
    flex-shrink: 0;
}

.payment-list-item .status-indicator {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.7rem;
}

.payment-content {
    flex: 1;
    display: grid;
    grid-template-columns: 1fr auto auto;
    gap: 1rem;
    align-items: center;
}

.payment-member {
    color: var(--text-primary);
    font-size: 0.9rem;
}

.payment-amount {
    font-weight: 700;
    color: #28a745;
    text-align: center;
}

.payment-date {
    font-size: 0.8rem;
    color: var(--text-secondary);
    text-align: right;
}

/* Empty States */
.empty-state-small {
    text-align: center;
    padding: 3rem 1rem;
}

.empty-state-small .empty-icon {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.05));
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    color: #667eea;
    margin: 0 auto 1rem;
}

.empty-state-small p {
    color: var(--text-secondary);
    margin-bottom: 1rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .treasurer-header {
        padding: 1.5rem;
    }
    
    .header-content .page-title {
        font-size: 1.5rem;
        flex-direction: column;
        text-align: center;
    }
    
    .title-icon {
        margin-right: 0;
        margin-bottom: 1rem;
    }
    
    .spotlight-content {
        grid-template-columns: 1fr;
        text-align: center;
        gap: 1.5rem;
    }
    
    .spotlight-features {
        justify-content: center;
    }
    
    .stats-grid {
        grid-template-columns: 1fr;
    }
    
    .stat-card {
        justify-content: center;
        text-align: center;
    }
    
    .import-header {
        flex-direction: column;
        gap: 0.5rem;
        text-align: center;
    }
    
    .import-stats {
        justify-content: center;
    }
    
    .payment-content {
        grid-template-columns: 1fr;
        text-align: center;
        gap: 0.5rem;
    }
}

@keyframes float {
    0%, 100% { transform: translate(0, 0) rotate(0deg); }
    33% { transform: translate(-5px, -5px) rotate(120deg); }
    66% { transform: translate(5px, -5px) rotate(240deg); }
}
</style>
{% endblock %}