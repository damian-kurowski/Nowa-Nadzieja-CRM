{% extends 'base.html.twig' %}

{% block title %}Szczegóły postępu - {{ kandydat.imie }} {{ kandydat.nazwisko }} - CRM Nowa Nadzieja{% endblock %}

{% block page_title %}Szczegóły postępu kandydata{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Enhanced Professional Progress Design */

        .candidate-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 3rem 2rem;
            border-radius: 20px;
            margin-bottom: 3rem;
            box-shadow: 0 20px 40px rgba(102, 126, 234, 0.2);
            position: relative;
            overflow: hidden;
        }

        .candidate-header::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            animation: float 20s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translate(0, 0) rotate(0deg); }
            33% { transform: translate(-20px, -20px) rotate(120deg); }
            66% { transform: translate(20px, -20px) rotate(240deg); }
        }

        .candidate-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            font-weight: bold;
            backdrop-filter: blur(10px);
            margin-right: 1.5rem;
        }

        .overall-progress {
            background: rgba(255,255,255,0.2);
            border-radius: 15px;
            padding: 1.5rem;
            backdrop-filter: blur(10px);
        }

        .progress-circle {
            position: relative;
            width: 120px;
            height: 120px;
            margin: 0 auto 1rem;
        }

        .progress-circle svg {
            transform: rotate(-90deg);
            width: 100%;
            height: 100%;
        }

        .progress-circle .progress-bg {
            fill: none;
            stroke: rgba(255,255,255,0.2);
            stroke-width: 8;
        }

        .progress-circle .progress-fill {
            fill: none;
            stroke: #10b981;
            stroke-width: 8;
            stroke-linecap: round;
            stroke-dasharray: 314;
            stroke-dashoffset: 314;
            animation: progressAnimation 2s ease-in-out forwards;
        }

        @keyframes progressAnimation {
            to {
                stroke-dashoffset: calc(314 - (314 * var(--progress)) / 100);
            }
        }

        .progress-percentage {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 1.5rem;
            font-weight: bold;
            color: white;
        }

        .progress-steps {
            position: relative;
            padding-left: 3rem;
        }

        .progress-timeline {
            position: absolute;
            left: 2rem;
            top: 0;
            bottom: 0;
            width: 2px;
            background: linear-gradient(to bottom, #e5e7eb 0%, #10b981 var(--completed-height, 0%), #e5e7eb var(--completed-height, 0%));
            animation: timelineGrow 1s ease-out;
        }

        @keyframes timelineGrow {
            from { height: 0; }
            to { height: 100%; }
        }

        .step-card {
            background: white;
            border: none;
            border-radius: 16px;
            padding: 0;
            margin-bottom: 1.5rem;
            box-shadow: 0 4px 16px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .step-card:hover {
            transform: translateX(8px);
            box-shadow: 0 8px 32px rgba(0,0,0,0.12);
        }

        .step-card.completed {
            background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
            border: 2px solid #10b981;
        }

        .step-card.pending {
            background: linear-gradient(135deg, #fffbeb 0%, #fef3c7 100%);
            border: 2px solid #f59e0b;
        }

        .step-card.completed::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(to bottom, #10b981, #059669);
        }

        .step-card.pending::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(to bottom, #f59e0b, #d97706);
        }

        .step-header {
            padding: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .step-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            font-weight: bold;
            position: relative;
            flex-shrink: 0;
        }

        .step-card.completed .step-icon {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
            animation: pulse 2s infinite;
        }

        .step-card.pending .step-icon {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
        }

        .step-card:not(.completed):not(.pending) .step-icon {
            background: linear-gradient(135deg, #e5e7eb, #d1d5db);
            color: #6b7280;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .step-content {
            flex: 1;
        }

        .step-title {
            font-size: 1.2rem;
            font-weight: 700;
            margin: 0 0 0.5rem 0;
            color: #1f2937;
        }

        .step-description {
            color: #6b7280;
            font-size: 0.95rem;
            line-height: 1.5;
        }

        .step-actions {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .custom-toggle {
            position: relative;
            width: 60px;
            height: 32px;
            background: #e5e7eb;
            border-radius: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .custom-toggle.active {
            background: linear-gradient(135deg, #10b981, #059669);
        }

        .custom-toggle::after {
            content: '';
            position: absolute;
            top: 2px;
            left: 2px;
            width: 28px;
            height: 28px;
            background: white;
            border-radius: 50%;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(0,0,0,0.2);
        }

        .custom-toggle.active::after {
            transform: translateX(28px);
        }

        .toggle-checkbox {
            display: none;
        }

        .completed-indicator {
            display: flex;
            align-items: center;
            padding: 0.5rem 1rem;
            background: linear-gradient(135deg, #dcfce7, #bbf7d0);
            border-radius: 20px;
            border: 2px solid #10b981;
            animation: completedPulse 2s ease-in-out;
        }

        @keyframes completedPulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .completed-indicator i {
            font-size: 1.2rem;
        }

        .step-meta {
            padding: 0 1.5rem 1.5rem 1.5rem;
            background: rgba(0,0,0,0.02);
            display: flex;
            gap: 2rem;
            flex-wrap: wrap;
        }

        .meta-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
            color: #6b7280;
        }

        .meta-item i {
            width: 16px;
            text-align: center;
        }

        .meta-item.completed {
            color: #059669;
        }

        .management-panel {
            background: white;
            border-radius: 16px;
            padding: 2rem;
            box-shadow: 0 4px 16px rgba(0,0,0,0.08);
            margin-top: 2rem;
        }

        .management-panel h6 {
            color: #1f2937;
            font-weight: 700;
            margin-bottom: 1rem;
        }

        .form-control {
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            padding: 1rem;
            transition: all 0.3s ease;
            font-size: 1rem;
        }

        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .save-btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 12px;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .save-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .save-btn:hover::before {
            left: 100%;
        }

        .save-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 24px rgba(102, 126, 234, 0.3);
        }

        .info-card {
            background: white;
            border-radius: 16px;
            border: none;
            box-shadow: 0 4px 16px rgba(0,0,0,0.08);
            overflow: hidden;
            margin-bottom: 1.5rem;
        }

        .info-card .card-header {
            background: linear-gradient(135deg, #f8fafc, #e2e8f0);
            border: none;
            padding: 1.5rem;
        }

        .info-card .card-body {
            padding: 1.5rem;
        }

        .info-item {
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #f1f5f9;
        }

        .info-item:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }

        .info-label {
            font-size: 0.875rem;
            color: #64748b;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            margin-bottom: 0.25rem;
        }

        .info-value {
            font-weight: 600;
            color: #1e293b;
            font-size: 1rem;
        }

        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .status-badge.aktywny {
            background: linear-gradient(135deg, #dcfce7, #bbf7d0);
            color: #059669;
        }

        .status-badge.kandydat {
            background: linear-gradient(135deg, #fef3c7, #fde68a);
            color: #d97706;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .candidate-header {
                padding: 2rem 1rem;
            }

            .candidate-avatar {
                width: 60px;
                height: 60px;
                font-size: 1.5rem;
            }

            .progress-steps {
                padding-left: 1rem;
            }

            .progress-timeline {
                left: 0.5rem;
            }

            .step-card:hover {
                transform: none;
            }

            .step-header {
                padding: 1rem;
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }

            .step-icon {
                width: 50px;
                height: 50px;
                font-size: 1.25rem;
            }

            .step-meta {
                padding: 1rem;
                flex-direction: column;
                gap: 0.5rem;
            }
        }

        /* Dark theme support */
        [data-theme="dark"] .step-card {
            background: #1f2937;
            color: #f9fafb;
        }

        [data-theme="dark"] .step-card.completed {
            background: linear-gradient(135deg, #064e3b, #065f46);
        }

        [data-theme="dark"] .step-card.pending {
            background: linear-gradient(135deg, #451a03, #92400e);
        }

        [data-theme="dark"] .info-card {
            background: #1f2937;
            color: #f9fafb;
        }

        [data-theme="dark"] .management-panel {
            background: #1f2937;
            color: #f9fafb;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container-fluid">
    <!-- Enhanced Header with Circular Progress -->
    <div class="candidate-header">
        <div class="row align-items-center">
            <div class="col-md-8">
                <div class="d-flex align-items-center">
                    <div class="candidate-avatar">
                        {{ kandydat.imie|first }}{{ kandydat.nazwisko|first }}
                    </div>
                    <div>
                        <h2 class="mb-2">
                            <i class="fas fa-user-graduate me-3"></i>
                            {{ kandydat.fullName }}
                        </h2>
                        <p class="mb-0 opacity-90">
                            <i class="fas fa-envelope me-2"></i>{{ kandydat.email }}
                            {% if kandydat.telefon %}
                                <i class="fas fa-phone ms-3 me-2"></i>{{ kandydat.telefon }}
                            {% endif %}
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="overall-progress text-center">
                    <div class="progress-circle">
                        <svg>
                            <circle class="progress-bg" cx="60" cy="60" r="50"></circle>
                            <circle class="progress-fill" cx="60" cy="60" r="50"
                                    style="--progress: {{ postep.postepProcentowy }}"></circle>
                        </svg>
                        <div class="progress-percentage">{{ postep.postepProcentowy }}%</div>
                    </div>
                    <div class="text-center">
                        <strong>Postęp rekrutacji</strong>
                        {% if postep.postepProcentowy == 100 %}
                            <div class="mt-2">
                                <span class="badge bg-success">
                                    <i class="fas fa-check-circle me-1"></i>Gotowy do przyjęcia
                                </span>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <!-- Enhanced Progress Steps with Timeline -->
            <form method="post" action="{{ path('postep_kandydata_update', {id: kandydat.id}) }}">
                <div class="progress-steps">
                    <!-- Timeline Line -->
                    {% set completedSteps = postep.krokiPostepuArray|filter(k => k.wykonane)|length %}
                    {% set totalSteps = postep.krokiPostepuArray|length %}
                    {% set completedHeight = (completedSteps / totalSteps * 100) %}
                    <div class="progress-timeline" style="--completed-height: {{ completedHeight }}%"></div>

                    {% set kroki = postep.krokiPostepuArray %}
                    {% set stepDescriptions = {
                        1: 'Opłacenie składki członkowskiej w wysokości 60 zł',
                        2: 'Przesłanie aktualnego zdjęcia w wysokiej jakości',
                        3: 'Wgranie dokumentu CV zawierającego doświadczenie zawodowe',
                        4: 'Uzupełnienie wszystkich wymaganych danych w profilu',
                        5: 'Przeprowadzenie rozmowy prekwalifikacyjnej z przedstawicielem partii',
                        6: 'Uzyskanie pozytywnej opinii od Rady Oddziału',
                        7: 'Udział w zebraniach oddziału przez okres 3 miesięcy',
                        8: 'Podjęcie ostatecznej decyzji o przyjęciu do partii'
                    } %}

                    {% set stepIcons = {
                        1: 'fas fa-credit-card',
                        2: 'fas fa-camera',
                        3: 'fas fa-file-alt',
                        4: 'fas fa-user-edit',
                        5: 'fas fa-comments',
                        6: 'fas fa-thumbs-up',
                        7: 'fas fa-users',
                        8: 'fas fa-gavel'
                    } %}

                    {% for numerKroku, krok in kroki %}
                        <div class="step-card {{ krok.wykonane ? 'completed' : 'pending' }}">
                            <div class="step-header">
                                <div class="step-icon">
                                    <i class="{{ stepIcons[numerKroku] ?: 'fas fa-check' }}"></i>
                                </div>
                                <div class="step-content">
                                    <h4 class="step-title">{{ krok.nazwa }}</h4>
                                    <p class="step-description">{{ stepDescriptions[numerKroku] ?: '' }}</p>
                                </div>
                                {% if is_granted('ROLE_FUNKCYJNY') %}
                                <div class="step-actions">
                                    {% if not krok.wykonane %}
                                    <div class="custom-toggle"
                                         onclick="toggleStep(this, {{ kandydat.id }}, {{ numerKroku }})">
                                        <input type="checkbox"
                                               class="toggle-checkbox"
                                               name="krok{{ numerKroku }}"
                                               value="1">
                                    </div>
                                    {% else %}
                                    <div class="completed-indicator">
                                        <i class="fas fa-check-circle text-success"></i>
                                        <span class="ms-2 text-success fw-bold">Wykonane</span>
                                    </div>
                                    {% endif %}
                                </div>
                                {% endif %}
                            </div>

                            {% if krok.wykonane %}
                                <div class="step-meta">
                                    {% if krok.odznaczyl %}
                                        <div class="meta-item completed">
                                            <i class="fas fa-user-check"></i>
                                            <span>Oznaczono przez: {{ krok.odznaczyl.fullName }}</span>
                                        </div>
                                    {% endif %}
                                    {% if krok.data %}
                                        <div class="meta-item completed">
                                            <i class="fas fa-calendar-check"></i>
                                            <span>Data wykonania: {{ krok.data|date('d.m.Y H:i') }}</span>
                                        </div>
                                    {% endif %}
                                </div>
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
                
                <!-- Uwagi -->
                {% if is_granted('ROLE_FUNKCYJNY') %}
                <div class="management-panel">
                    <h6 class="mb-3">Uwagi do procesu rekrutacji</h6>
                    <div class="mb-3">
                        <textarea 
                            name="uwagi" 
                            class="form-control" 
                            rows="4" 
                            placeholder="Dodaj uwagi dotyczące postępu kandydata..."
                        >{{ postep.uwagi }}</textarea>
                    </div>
                    <button type="submit" class="save-btn">
                        <i class="fas fa-save me-2"></i>
                        Zapisz zmiany
                    </button>
                </div>
                {% endif %}
            </form>
        </div>

        <!-- Enhanced Sidebar -->
        <div class="col-md-4">
            <!-- Process Information Card -->
            <div class="info-card">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-info-circle me-2"></i>
                        Informacje o procesie
                    </h6>
                </div>
                <div class="card-body">
                    <div class="info-item">
                        <div class="info-label">Aktualny etap</div>
                        <div class="info-value">{{ postep.aktualnyEtap }} / 8</div>
                    </div>

                    <div class="info-item">
                        <div class="info-label">Data rozpoczęcia</div>
                        <div class="info-value">{{ postep.dataRozpoczecia|date('d.m.Y H:i') }}</div>
                    </div>

                    {% if postep.dataZakonczenia %}
                    <div class="info-item">
                        <div class="info-label">Data zakończenia</div>
                        <div class="info-value text-success">
                            <i class="fas fa-check-circle me-1"></i>
                            {{ postep.dataZakonczenia|date('d.m.Y H:i') }}
                        </div>
                    </div>
                    {% endif %}

                    {% if postep.prezesOdpowiedzialny %}
                    <div class="info-item">
                        <div class="info-label">Osoba odpowiedzialna</div>
                        <div class="info-value">
                            <i class="fas fa-user-tie me-1"></i>
                            {{ postep.prezesOdpowiedzialny.fullName }}
                        </div>
                    </div>
                    {% endif %}

                    <div class="info-item">
                        <div class="info-label">Ukończone kroki</div>
                        <div class="info-value">
                            <i class="fas fa-tasks me-1"></i>
                            {{ completedSteps }} z {{ totalSteps }}
                        </div>
                    </div>
                </div>
            </div>

            <!-- Candidate Details Card -->
            <div class="info-card">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-user me-2"></i>
                        Informacje o kandydacie
                    </h6>
                </div>
                <div class="card-body">
                    {% if kandydat.okreg %}
                    <div class="info-item">
                        <div class="info-label">Okręg</div>
                        <div class="info-value">
                            <i class="fas fa-map-marker-alt me-1"></i>
                            {{ kandydat.okreg.nazwa }}
                        </div>
                    </div>
                    {% endif %}

                    {% if kandydat.oddzial %}
                    <div class="info-item">
                        <div class="info-label">Oddział</div>
                        <div class="info-value">
                            <i class="fas fa-building me-1"></i>
                            {{ kandydat.oddzial.nazwa }}
                        </div>
                    </div>
                    {% endif %}

                    <div class="info-item">
                        <div class="info-label">Status</div>
                        <div class="info-value">
                            <span class="status-badge {{ kandydat.status }}">
                                {% if kandydat.status == 'aktywny' %}
                                    <i class="fas fa-check-circle me-1"></i>
                                {% elseif kandydat.status == 'kandydat' %}
                                    <i class="fas fa-clock me-1"></i>
                                {% endif %}
                                {{ kandydat.status|title }}
                            </span>
                        </div>
                    </div>

                    {% if kandydat.dataRejestracji %}
                    <div class="info-item">
                        <div class="info-label">Data rejestracji</div>
                        <div class="info-value">
                            <i class="fas fa-calendar-plus me-1"></i>
                            {{ kandydat.dataRejestracji|date('d.m.Y') }}
                        </div>
                    </div>
                    {% endif %}
                </div>
            </div>

            <!-- Document Creation -->
            {% if postep.postepProcentowy == 100 %}
            <div class="info-card">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-graduation-cap me-2"></i>
                        Kandydat gotowy
                    </h6>
                </div>
                <div class="card-body text-center">
                    <p class="text-success mb-3">
                        <i class="fas fa-check-circle me-1"></i>
                        Kandydat ukończył wszystkie wymagane kroki!
                    </p>
                    <a href="{{ path('dokument_create', {type: 'przyjecie_czlonka_pelnomocnik'}) }}"
                       class="btn btn-success">
                        <i class="fas fa-user-plus me-1"></i>
                        Utwórz dokument przyjęcia
                    </a>
                </div>
            </div>
            {% endif %}
        </div>
    </div>
</div>

<script>
// Enhanced JavaScript for Professional Progress UI

document.addEventListener('DOMContentLoaded', function() {
    // Initialize animations
    initializeAnimations();
});

function initializeAnimations() {
    // Animate progress circle on load
    const progressFill = document.querySelector('.progress-fill');
    if (progressFill) {
        setTimeout(() => {
            progressFill.style.strokeDashoffset = `calc(314 - (314 * ${progressFill.style.getPropertyValue('--progress')}) / 100)`;
        }, 500);
    }

    // Animate step cards on scroll
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateX(0)';
            }
        });
    }, observerOptions);

    document.querySelectorAll('.step-card').forEach(card => {
        card.style.opacity = '0';
        card.style.transform = 'translateX(-20px)';
        card.style.transition = 'all 0.6s ease';
        observer.observe(card);
    });
}

function toggleStep(toggleElement, kandydatId, krokNumer) {
    const checkbox = toggleElement.querySelector('input[type="checkbox"]');

    // Only allow checking (not unchecking)
    if (checkbox.checked) {
        return; // Already checked, do nothing
    }

    // Animate toggle before making request
    toggleElement.classList.add('active');
    checkbox.checked = true;

    // Make AJAX request to mark as completed
    toggleKrok(kandydatId, krokNumer, true, toggleElement);
}

async function toggleKrok(kandydatId, krokNumer, isChecked, toggleElement = null) {
    try {
        const response = await fetch(`/postep-kandydatow/${kandydatId}/krok/${krokNumer}/toggle`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: `checked=${isChecked}`
        });

        if (response.ok) {
            const result = await response.json();
            if (result.success) {
                // Show success notification
                showNotification(result.message, 'success');

                // Refresh the page to show updated progress with animation
                setTimeout(() => {
                    window.location.reload();
                }, 800);
            } else {
                throw new Error(result.message || 'Unknown error');
            }
        } else {
            throw new Error('Server error');
        }
    } catch (error) {
        console.error('Error toggling step:', error);

        // Revert toggle state
        if (toggleElement) {
            const checkbox = toggleElement.querySelector('input[type="checkbox"]');
            if (isChecked) {
                toggleElement.classList.remove('active');
                checkbox.checked = false;
            } else {
                toggleElement.classList.add('active');
                checkbox.checked = true;
            }
        }

        showNotification('Błąd podczas aktualizacji kroku: ' + error.message, 'error');
    }
}


function showNotification(message, type = 'info') {
    // Remove existing notifications
    const existingNotifications = document.querySelectorAll('.toast-notification');
    existingNotifications.forEach(n => n.remove());

    // Create notification
    const notification = document.createElement('div');
    notification.className = `toast-notification toast-${type}`;
    notification.innerHTML = `
        <div class="toast-content">
            <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-triangle'}"></i>
            <span>${message}</span>
        </div>
    `;

    // Add styles
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? 'linear-gradient(135deg, #10b981, #059669)' : 'linear-gradient(135deg, #ef4444, #dc2626)'};
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 12px;
        box-shadow: 0 8px 32px rgba(0,0,0,0.2);
        z-index: 1000;
        transform: translateX(100%);
        transition: all 0.3s ease;
        max-width: 400px;
    `;

    // Add to page
    document.body.appendChild(notification);

    // Animate in
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 100);

    // Auto remove
    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.remove();
            }
        }, 300);
    }, 3000);
}

// Add step numbers to cards for easier identification
document.querySelectorAll('.step-card').forEach((card, index) => {
    card.dataset.step = index + 1;
});

// Keyboard shortcuts
document.addEventListener('keydown', function(e) {
    if (e.ctrlKey || e.metaKey) {
        switch(e.key) {
            case 's':
                e.preventDefault();
                const saveBtn = document.querySelector('.save-btn');
                if (saveBtn) saveBtn.click();
                break;
        }
    }
});
</script>
{% endblock %}