{% extends 'base.html.twig' %}

{% block title %}Darczyńcy - CRM Nowa Nadzieja{% endblock %}

{% block page_title %}Darczyńcy{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {% include 'components/unified-card-styles.html.twig' %}
    <style>
        /* Professional Donors List Styling */
        .donors-header {
            background: linear-gradient(135deg, #9333ea 0%, #7c3aed 100%);
            border-radius: 20px;
            padding: 2.5rem;
            margin-bottom: 2rem;
            color: white;
            position: relative;
            overflow: hidden;
            box-shadow: 0 20px 40px rgba(147, 51, 234, 0.3);
        }
        
        .donors-header::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            animation: float 20s ease-in-out infinite;
        }
        
        @keyframes float {
            0%, 100% { transform: translate(0, 0) rotate(0deg); }
            33% { transform: translate(-20px, -20px) rotate(120deg); }
            66% { transform: translate(20px, -10px) rotate(240deg); }
        }
        
        .header-icon {
            width: 80px;
            height: 80px;
            background: rgba(255,255,255,0.15);
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            backdrop-filter: blur(10px);
        }
        
        .stats-grid {
            display: flex;
            justify-content: space-between;
            gap: 1rem;
            margin-top: 2rem;
            width: 100%;
        }
        
        .stat-card {
            background: rgba(255,255,255,0.15);
            backdrop-filter: blur(15px);
            border-radius: 16px;
            padding: 2rem 1.5rem;
            text-align: center;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            border: 1px solid rgba(255,255,255,0.2);
            position: relative;
            flex: 1;
            min-width: 0;
        }
        
        .stat-card:hover {
            transform: translateY(-8px) scale(1.02);
            background: rgba(255,255,255,0.2);
            box-shadow: 0 20px 40px rgba(0,0,0,0.2);
        }
        
        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-shadow: 0 2px 4px rgba(0,0,0,0.15);
            background: linear-gradient(45deg, #fff, rgba(255,255,255,0.9));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            display: block;
        }
        
        .stat-label {
            font-size: 0.875rem;
            font-weight: 500;
            opacity: 0.9;
            line-height: 1.2;
        }
        
        /* Enhanced Filter Section */
        .filters-container {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            border: 1px solid #e2e8f0;
            border-radius: 20px;
            margin-bottom: 2rem;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
        }
        
        .filters-header {
            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
            padding: 1.5rem 2rem;
            color: white;
        }
        
        .filter-icon {
            width: 50px;
            height: 50px;
            background: rgba(255,255,255,0.1);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }
        
        .filters-body {
            padding: 2rem;
            background: white;
        }
        
        .view-toggle {
            display: flex;
            background: rgba(255,255,255,0.1);
            border: 1px solid rgba(255,255,255,0.2);
            border-radius: 12px;
            overflow: hidden;
        }
        
        .view-btn {
            background: none;
            border: none;
            padding: 0.75rem 1.5rem;
            color: rgba(255,255,255,0.8);
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 500;
        }
        
        .view-btn.active {
            background: rgba(255,255,255,0.2);
            color: white;
            transform: scale(1.05);
        }
        
        .view-btn:hover:not(.active) {
            background: rgba(255,255,255,0.1);
            color: white;
        }
        
        /* Enhanced Form Elements */
        .form-control, .form-select {
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            padding: 0.75rem 1rem;
            transition: all 0.3s ease;
            background: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.02);
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #9333ea;
            box-shadow: 0 0 0 3px rgba(147, 51, 234, 0.1);
            transform: translateY(-1px);
        }
        
        .form-label {
            font-weight: 600;
            color: #374151;
            margin-bottom: 0.5rem;
        }
        
        /* Enhanced Buttons */
        .btn {
            border-radius: 12px;
            font-weight: 600;
            padding: 0.75rem 1.5rem;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: none;
            position: relative;
            overflow: hidden;
        }
        
        .btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255,255,255,0.2);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: all 0.6s ease;
        }
        
        .btn:hover::before {
            width: 300px;
            height: 300px;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #9333ea 0%, #7c3aed 100%);
            box-shadow: 0 8px 20px rgba(147, 51, 234, 0.3);
        }
        
        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 30px rgba(147, 51, 234, 0.4);
        }
        
        .btn-outline-secondary {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            color: #64748b;
            border: 2px solid #e2e8f0;
        }
        
        .btn-outline-secondary:hover {
            background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e1 100%);
            color: #475569;
            transform: translateY(-2px);
        }
        
        /* Purple theme for donors */
        :root {
            --brand-primary: #9333ea;
            --brand-secondary: #7c3aed; 
            --brand-primary-rgb: 147, 51, 234;
            --brand-secondary-rgb: 124, 58, 237;
            --brand-primary-darker: #7c3aed;
        }
        
        .unified-cards-container {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1rem;
            padding: 1rem 0;
        }
        
        /* VIP Status Badge */
        .unified-status-badge.vip {
            background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
            color: white;
            box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3);
        }
        
        
        
        /* Empty State Enhancement */
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
            border-radius: 20px;
            border: 2px dashed #cbd5e1;
        }
        
        .empty-state-icon {
            width: 100px;
            height: 100px;
            background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e1 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2.5rem;
            color: #64748b;
            margin: 0 auto 2rem;
        }
        
        /* Animation Classes */
        .animate-in {
            animation: slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
            opacity: 0;
            transform: translateY(30px);
        }
        
        @keyframes slideInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        /* Dark Mode Support */
        @media (prefers-color-scheme: dark) {
            .donors-header {
                background: linear-gradient(135deg, #7c3aed 0%, #6d28d9 100%);
            }
            
            .unified-card {
                background: var(--bs-dark, #1a1a1a);
                border-color: var(--bs-border-color-dark, #404040);
                color: var(--bs-light, #ffffff);
            }
            
            .unified-card:hover {
                background: var(--bs-secondary-bg-dark, #2d2d2d);
            }
            
            .form-control, .form-select {
                background: var(--bs-dark, #1a1a1a);
                border-color: var(--bs-border-color-dark, #404040);
                color: var(--bs-light, #ffffff);
            }
            
            .filters-body {
                background: var(--bs-dark, #1a1a1a);
            }
        }
        
        /* Responsive Enhancements */
        @media (max-width: 992px) {
            .stats-grid {
                flex-wrap: wrap;
                justify-content: center;
            }
            
            .stat-card {
                flex: 0 0 calc(50% - 0.5rem);
                min-width: calc(50% - 0.5rem);
            }
        }
        
        @media (max-width: 768px) {
            .unified-card {
                flex-direction: column;
                align-items: flex-start;
                text-align: left;
                gap: 1rem;
            }
            
            .donors-header {
                padding: 1.5rem;
            }
            
            .stats-grid {
                flex-wrap: wrap;
                gap: 1rem;
            }
            
            .stat-card {
                flex: 0 0 calc(50% - 0.5rem);
                min-width: calc(50% - 0.5rem);
            }
        }
        
        @media (max-width: 576px) {
            .stats-grid {
                flex-direction: column;
                gap: 1rem;
            }
            
            .stat-card {
                flex: none;
                min-width: auto;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <!-- Enhanced Table Header -->
    <div class="table-header donors-header">
        <div class="d-flex align-items-center mb-3">
            <div class="header-icon me-3">
                <i class="fas fa-hand-holding-usd"></i>
            </div>
            <div>
                <h2 class="mb-0">Darczyńcy</h2>
                <p class="mb-0 opacity-90">Zarządzaj osobami wspierającymi partię finansowo</p>
            </div>
        </div>
        
        <!-- Realne Statystyki z Bazy Danych - pełna szerokość -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number">{{ stats.total }}</div>
                <div class="stat-label">Łączna liczba darczyńców</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{{ stats.activeCount }}</div>
                <div class="stat-label">Aktywni darczyńcy</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{{ (stats.totalAmount / 1000)|number_format(1, '.', ' ') }}k zł</div>
                <div class="stat-label">Łączne wsparcie</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{{ stats.avgDonation|number_format(0, '.', ' ') }} zł</div>
                <div class="stat-label">Średnia dotacja</div>
            </div>
        </div>
    </div>

    <!-- Enhanced Filters Container -->
    <div class="filters-container donors" id="filtersContainer">
        <div class="filters-header">
            <div class="d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center">
                    <div class="filter-icon me-3">
                        <i class="fas fa-filter"></i>
                    </div>
                    <div>
                        <h6 class="mb-0 fw-bold">Filtry wyszukiwania</h6>
                        <small class="opacity-75">Znajdź konkretnego darczyńcę</small>
                    </div>
                </div>
            </div>
        </div>
        <div class="filters-body">
            <form method="GET" id="filterForm">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label">Szybkie wyszukiwanie</label>
                        <input type="text" name="search" class="form-control" 
                               placeholder="Imię, nazwisko, email, firma..." 
                               value="{{ app.request.query.get('search') }}">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Forma wsparcia</label>
                        <select name="forma_wsparcia" class="form-select">
                            <option value="">Wszystkie formy</option>
                            <option value="przelew" {{ app.request.query.get('forma_wsparcia') == 'przelew' ? 'selected' : '' }}>Przelew</option>
                            <option value="gotówka" {{ app.request.query.get('forma_wsparcia') == 'gotówka' ? 'selected' : '' }}>Gotówka</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-primary mt-4">
                            <i class="fas fa-search me-2"></i>Szukaj
                        </button>
                        <button type="button" class="btn btn-outline-secondary mt-4" onclick="clearFilters()">
                            <i class="fas fa-times me-2"></i>Wyczyść
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Data Container -->
    <div class="data-container">
        {% if pagination.items|length > 0 %}
            <!-- Elegant Vertical List View -->
            <div class="unified-cards-container" id="cardsContainer">
                {% for darczyca in pagination.items %}
                    <div class="unified-card animate-in" data-donor-id="{{ darczyca.id }}">
                        {# Status Badge #}
                        <div class="unified-card-status">
                            {% set statusType = darczyca.statusDarczyny == 'aktywny' ? 'aktywny' : (darczyca.statusDarczyny == 'vip' ? 'vip' : 'nieaktywny') %}
                            <span class="unified-status-badge {{ statusType }}">
                                {% if darczyca.statusDarczyny == 'vip' %}
                                    <i class="fas fa-crown me-1"></i>VIP
                                {% else %}
                                    {{ darczyca.statusDarczyny|title }}
                                {% endif %}
                            </span>
                        </div>

                        {# Card Header #}
                        <div class="unified-card-header">
                            <div class="unified-card-avatar">
                                <span class="unified-card-avatar-initials">
                                    {{ darczyca.imie|first|upper }}{{ darczyca.nazwisko|first|upper }}
                                </span>
                            </div>
                            <div class="unified-card-info">
                                <h6 class="unified-card-name">{{ darczyca.imie }} {{ darczyca.nazwisko }}</h6>
                                <div class="unified-card-meta">
                                    {% if darczyca.firma %}
                                        <div class="unified-card-meta-item">
                                            <i class="fas fa-building"></i>
                                            <span>{{ darczyca.firma }}</span>
                                        </div>
                                    {% endif %}
                                    {% if darczyca.email %}
                                        <div class="unified-card-meta-item">
                                            <i class="fas fa-envelope"></i>
                                            <span>{{ darczyca.email }}</span>
                                        </div>
                                    {% endif %}
                                    {% if darczyca.telefon %}
                                        <div class="unified-card-meta-item">
                                            <i class="fas fa-phone"></i>
                                            <span>{{ darczyca.telefon }}</span>
                                        </div>
                                    {% endif %}
                                </div>
                            </div>
                        </div>

                        {# Card Body #}
                        <div class="unified-card-body">
                            <div class="unified-card-details">
                                <div class="unified-card-detail">
                                    <span class="unified-detail-label">Łączne wsparcie</span>
                                    <span class="unified-detail-value">
                                        {% if darczyca.lacznaKwotaDotacji > 0 %}
                                            <strong class="text-success">{{ darczyca.lacznaKwotaDotacji|number_format(2) }} zł</strong>
                                        {% else %}
                                            <span class="text-muted">0,00 zł</span>
                                        {% endif %}
                                    </span>
                                </div>
                                <div class="unified-card-detail">
                                    <span class="unified-detail-label">Liczba dotacji</span>
                                    <span class="unified-detail-value">
                                        <span class="badge bg-info">{{ darczyca.liczbaDotacji }}</span>
                                    </span>
                                </div>
                                <div class="unified-card-detail">
                                    <span class="unified-detail-label">Typ darczyńcy</span>
                                    <span class="unified-detail-value">
                                        {% if darczyca.typDarczyny == 'osoba_prawna' %}
                                            <em>Osoba prawna</em>
                                        {% else %}
                                            <em>Osoba fizyczna</em>
                                        {% endif %}
                                    </span>
                                </div>
                                <div class="unified-card-detail">
                                    <span class="unified-detail-label">Ostatnia interakcja</span>
                                    <span class="unified-detail-value">
                                        {% if darczyca.ostatniaInterakcja %}
                                            {{ darczyca.ostatniaInterakcja|date('d.m.Y') }}
                                        {% else %}
                                            <em>Brak danych</em>
                                        {% endif %}
                                    </span>
                                </div>
                            </div>
                        </div>

                        {# Card Footer #}
                        <div class="unified-card-footer">
                            <a href="{{ path('darczyca_show', {id: darczyca.id}) }}" class="unified-action-btn primary">
                                <i class="fas fa-eye"></i>
                                <span>Zobacz</span>
                            </a>
                            <a href="{{ path('darczyca_edit', {id: darczyca.id}) }}" class="unified-action-btn secondary">
                                <i class="fas fa-edit"></i>
                                <span>Edytuj</span>
                            </a>
                        </div>
                    </div>
                {% endfor %}
            </div>


            <!-- Pagination -->
            <div class="pagination-container">
                {{ knp_pagination_render(pagination) }}
            </div>
        {% else %}
            <div class="empty-state">
                <div class="empty-state-icon">
                    <i class="fas fa-hand-holding-usd"></i>
                </div>
                <h4>Brak darczyńców</h4>
                <p class="text-muted">Nie znaleziono żadnych darczyńców spełniających kryteria wyszukiwania.</p>
                <a href="{{ path('darczyca_new') }}" class="btn btn-primary btn-lg">
                    <i class="fas fa-plus me-2"></i>Dodaj pierwszego darczyńcę
                </a>
            </div>
        {% endif %}
    </div>

    <script>
        function clearFilters() {
            document.getElementById('filterForm').reset();
            document.getElementById('filterForm').submit();
        }
        
        
        // Enhanced functionality for professional donor management
        function addPayment(darczycaId) {
            showNotification('Funkcjonalność dodawania wpłat będzie dostępna wkrótce.', 'info');
        }
        
        function sendEmail(email) {
            window.open('mailto:' + email, '_blank');
            showNotification('Otwarto klienta pocztowego', 'success');
        }
        
        function archiveDonor(darczycaId) {
            if (confirm('Czy na pewno chcesz zarchiwizować tego darczyńcę?')) {
                showNotification('Funkcjonalność archiwizacji będzie dostępna wkrótce.', 'info');
            }
        }
        
        // Usunięta funkcja exportData zgodnie z życzeniem użytkownika
        
        function showNotification(message, type = 'info') {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = `alert alert-${type === 'info' ? 'primary' : type} alert-dismissible fade show notification-toast`;
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                z-index: 9999;
                min-width: 300px;
                animation: slideInRight 0.3s ease;
            `;
            notification.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(notification);
            
            // Auto remove after 3 seconds
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 3000);
        }
        
        // Animate cards on load
        function animateCards() {
            const cards = document.querySelectorAll('.unified-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
                card.classList.add('animate-in');
            });
        }
        
        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Animate cards
            setTimeout(animateCards, 100);
            
            // Add search functionality
            const searchInput = document.querySelector('input[name="search"]');
            if (searchInput) {
                searchInput.addEventListener('input', debounce(function() {
                }, 500));
            }
        });
        
        // Debounce function for search
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }
        
        // Add CSS for animations
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideInRight {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
            
            .professional-indicators .indicator-badge {
                display: flex;
                align-items: center;
                font-size: 0.8rem;
            }
            
            .rating-stars {
                display: flex;
                gap: 2px;
            }
            
            .unified-status-badge.vip {
                background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
                color: white;
                box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3);
            }
        `;
        document.head.appendChild(style);
    </script>
{% endblock %}