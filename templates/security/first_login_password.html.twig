<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <title>Zmiana has≈Ça - Nowa Nadzieja CRM</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary: #667eea;
            --primary-dark: #5568d3;
            --success: #10b981;
            --danger: #ef4444;
            --warning: #f59e0b;
            --bg-light: #f8f9fa;
            --bg-dark: #1a1d29;
            --card-light: #ffffff;
            --card-dark: #242836;
            --text-light: #1f2937;
            --text-dark: #f3f4f6;
            --border-light: #e5e7eb;
            --border-dark: #374151;
            --input-bg-light: #ffffff;
            --input-bg-dark: #2d3142;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, var(--primary) 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            padding: 1rem;
            transition: background 0.3s ease;
        }

        @media (prefers-color-scheme: dark) {
            body {
                background: linear-gradient(135deg, #1e1b4b 0%, #312e81 100%);
            }
        }

        .container-custom {
            max-width: 500px;
            margin: 0 auto;
            width: 100%;
        }

        .card-custom {
            background: var(--card-light);
            border-radius: 24px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            overflow: hidden;
            border: 1px solid rgba(255, 255, 255, 0.1);
            animation: slideUp 0.5s ease;
        }

        @media (prefers-color-scheme: dark) {
            .card-custom {
                background: var(--card-dark);
                border-color: var(--border-dark);
            }
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .card-header-custom {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: white;
            padding: 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .card-header-custom::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            animation: pulse 3s ease-in-out infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); opacity: 0.5; }
            50% { transform: scale(1.1); opacity: 0.8; }
        }

        .card-header-custom h1 {
            font-size: 1.75rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            position: relative;
            z-index: 1;
        }

        .card-header-custom p {
            font-size: 0.95rem;
            opacity: 0.95;
            position: relative;
            z-index: 1;
        }

        .progress-indicator {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 1rem;
            position: relative;
            z-index: 1;
        }

        .progress-dot {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.3);
            transition: all 0.3s ease;
        }

        .progress-dot.active {
            background: white;
            transform: scale(1.3);
        }

        .card-body-custom {
            padding: 2rem;
        }

        .alert-custom {
            padding: 1rem 1.25rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            border: none;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            animation: slideIn 0.3s ease;
        }

        @keyframes slideIn {
            from { opacity: 0; transform: translateX(-10px); }
            to { opacity: 1; transform: translateX(0); }
        }

        .alert-danger {
            background: rgba(239, 68, 68, 0.1);
            color: var(--danger);
            border-left: 4px solid var(--danger);
        }

        .alert-warning {
            background: rgba(245, 158, 11, 0.1);
            color: var(--warning);
            border-left: 4px solid var(--warning);
        }

        .alert-success {
            background: rgba(16, 185, 129, 0.1);
            color: var(--success);
            border-left: 4px solid var(--success);
        }

        .form-group-custom {
            margin-bottom: 1.5rem;
        }

        .form-label-custom {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            font-size: 0.9rem;
            color: var(--text-light);
        }

        @media (prefers-color-scheme: dark) {
            .form-label-custom {
                color: var(--text-dark);
            }
        }

        .input-wrapper {
            position: relative;
        }

        .input-custom {
            width: 100%;
            padding: 0.875rem 1rem;
            padding-right: 3rem;
            border: 2px solid var(--border-light);
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: var(--input-bg-light);
            color: var(--text-light);
        }

        @media (prefers-color-scheme: dark) {
            .input-custom {
                background: var(--input-bg-dark);
                border-color: var(--border-dark);
                color: var(--text-dark);
            }
        }

        .input-custom:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
        }

        .input-icon {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #9ca3af;
            cursor: pointer;
            transition: color 0.2s ease;
        }

        .input-icon:hover {
            color: var(--primary);
        }

        .requirements-box {
            background: var(--bg-light);
            border-radius: 12px;
            padding: 1.25rem;
            margin-top: 1.5rem;
        }

        @media (prefers-color-scheme: dark) {
            .requirements-box {
                background: rgba(45, 49, 66, 0.5);
            }
        }

        .requirements-title {
            font-weight: 600;
            font-size: 0.9rem;
            margin-bottom: 1rem;
            color: var(--text-light);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        @media (prefers-color-scheme: dark) {
            .requirements-title {
                color: var(--text-dark);
            }
        }

        .requirement-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.5rem 0;
            font-size: 0.875rem;
            transition: all 0.3s ease;
        }

        .requirement-icon {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.7rem;
            transition: all 0.3s ease;
        }

        .requirement-unmet .requirement-icon {
            background: #e5e7eb;
            color: #9ca3af;
        }

        .requirement-met .requirement-icon {
            background: var(--success);
            color: white;
            animation: check 0.3s ease;
        }

        @keyframes check {
            0% { transform: scale(0); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }

        .requirement-met {
            color: var(--success);
        }

        .requirement-unmet {
            color: #6b7280;
        }

        .btn-primary-custom {
            width: 100%;
            padding: 1rem;
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            border: none;
            border-radius: 12px;
            color: white;
            font-weight: 600;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 1.5rem;
            position: relative;
            overflow: hidden;
        }

        .btn-primary-custom::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.2);
            transform: translate(-50%, -50%);
            transition: width 0.6s, height 0.6s;
        }

        .btn-primary-custom:hover::before {
            width: 300px;
            height: 300px;
        }

        .btn-primary-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
        }

        .btn-primary-custom:active {
            transform: translateY(0);
        }

        .btn-content {
            position: relative;
            z-index: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        @media (max-width: 576px) {
            .card-header-custom h1 {
                font-size: 1.5rem;
            }

            .card-body-custom {
                padding: 1.5rem;
            }

            .card-header-custom {
                padding: 1.5rem;
            }
        }

        .password-strength-meter {
            height: 4px;
            background: var(--border-light);
            border-radius: 2px;
            margin-top: 0.5rem;
            overflow: hidden;
        }

        @media (prefers-color-scheme: dark) {
            .password-strength-meter {
                background: var(--border-dark);
            }
        }

        .password-strength-fill {
            height: 100%;
            width: 0;
            transition: all 0.3s ease;
            border-radius: 2px;
        }

        .strength-weak { background: var(--danger); width: 33%; }
        .strength-medium { background: var(--warning); width: 66%; }
        .strength-strong { background: var(--success); width: 100%; }
    </style>
</head>
<body>
    <div class="container-custom">
        <div class="card-custom">
            <div class="card-header-custom">
                <i class="fas fa-shield-alt fa-2x mb-3"></i>
                <h1>Zmiana has≈Ça</h1>
                <p>Krok 1 z 3: Zabezpiecz swoje konto silnym has≈Çem</p>
                <div class="progress-indicator">
                    <div class="progress-dot active"></div>
                    <div class="progress-dot"></div>
                    <div class="progress-dot"></div>
                </div>
            </div>

            <div class="card-body-custom">
                {% if error %}
                    <div class="alert-custom alert-danger">
                        <i class="fas fa-exclamation-circle"></i>
                        <span>{{ error }}</span>
                    </div>
                {% endif %}

                {% for message in app.flashes('success') %}
                    <div class="alert-custom alert-success">
                        <i class="fas fa-check-circle"></i>
                        <span>{{ message }}</span>
                    </div>
                {% endfor %}

                <div class="alert-custom alert-warning">
                    <i class="fas fa-info-circle"></i>
                    <div>
                        <strong>Wymagana zmiana has≈Ça</strong><br>
                        <small>Ze wzglƒôd√≥w bezpiecze≈Ñstwa musisz ustawiƒá nowe, silne has≈Ço.</small>
                    </div>
                </div>

                <form method="post" id="passwordForm">
                    <div class="form-group-custom">
                        <label for="current_password" class="form-label-custom">
                            <i class="fas fa-key me-1"></i> Obecne has≈Ço
                        </label>
                        <div class="input-wrapper">
                            <input type="password"
                                   class="input-custom"
                                   id="current_password"
                                   name="current_password"
                                   required
                                   autocomplete="current-password">
                            <i class="fas fa-eye input-icon" onclick="togglePassword('current_password')"></i>
                        </div>
                    </div>

                    <div class="form-group-custom">
                        <label for="new_password" class="form-label-custom">
                            <i class="fas fa-lock me-1"></i> Nowe has≈Ço
                        </label>
                        <div class="input-wrapper">
                            <input type="password"
                                   class="input-custom"
                                   id="new_password"
                                   name="new_password"
                                   required
                                   autocomplete="new-password">
                            <i class="fas fa-eye input-icon" onclick="togglePassword('new_password')"></i>
                        </div>
                        <div class="password-strength-meter">
                            <div class="password-strength-fill" id="strengthMeter"></div>
                        </div>
                    </div>

                    <div class="form-group-custom">
                        <label for="confirm_password" class="form-label-custom">
                            <i class="fas fa-check-double me-1"></i> Potwierd≈∫ nowe has≈Ço
                        </label>
                        <div class="input-wrapper">
                            <input type="password"
                                   class="input-custom"
                                   id="confirm_password"
                                   name="confirm_password"
                                   required
                                   autocomplete="new-password">
                            <i class="fas fa-eye input-icon" onclick="togglePassword('confirm_password')"></i>
                        </div>
                    </div>

                    <div class="requirements-box">
                        <div class="requirements-title">
                            <i class="fas fa-clipboard-list"></i>
                            <span>Wymagania dotyczƒÖce has≈Ça</span>
                        </div>
                        <div class="requirement-item requirement-unmet" id="req-length">
                            <div class="requirement-icon">
                                <i class="fas fa-circle"></i>
                            </div>
                            <span>Minimum 12 znak√≥w</span>
                        </div>
                        <div class="requirement-item requirement-unmet" id="req-uppercase">
                            <div class="requirement-icon">
                                <i class="fas fa-circle"></i>
                            </div>
                            <span>Przynajmniej jedna wielka litera (A-Z)</span>
                        </div>
                        <div class="requirement-item requirement-unmet" id="req-lowercase">
                            <div class="requirement-icon">
                                <i class="fas fa-circle"></i>
                            </div>
                            <span>Przynajmniej jedna ma≈Ça litera (a-z)</span>
                        </div>
                        <div class="requirement-item requirement-unmet" id="req-number">
                            <div class="requirement-icon">
                                <i class="fas fa-circle"></i>
                            </div>
                            <span>Przynajmniej jedna cyfra (0-9)</span>
                        </div>
                        <div class="requirement-item requirement-unmet" id="req-special">
                            <div class="requirement-icon">
                                <i class="fas fa-circle"></i>
                            </div>
                            <span>Przynajmniej jeden znak specjalny (@$!%*?&)</span>
                        </div>
                    </div>

                    <button type="submit" class="btn-primary-custom">
                        <span class="btn-content">
                            <span>Zmie≈Ñ has≈Ço i kontynuuj</span>
                            <i class="fas fa-arrow-right"></i>
                        </span>
                    </button>
                </form>
            </div>
        </div>
    </div>

    <script>
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling;

            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        const newPassword = document.getElementById('new_password');
        const strengthMeter = document.getElementById('strengthMeter');

        const requirements = {
            length: { id: 'req-length', test: val => val.length >= 12 },
            uppercase: { id: 'req-uppercase', test: val => /[A-Z]/.test(val) },
            lowercase: { id: 'req-lowercase', test: val => /[a-z]/.test(val) },
            number: { id: 'req-number', test: val => /\d/.test(val) },
            special: { id: 'req-special', test: val => /[@$!%*?&]/.test(val) }
        };

        function checkRequirement(id, condition) {
            const elem = document.getElementById(id);
            const icon = elem.querySelector('.requirement-icon i');

            if (condition) {
                elem.classList.remove('requirement-unmet');
                elem.classList.add('requirement-met');
                icon.classList.remove('fa-circle');
                icon.classList.add('fa-check');
            } else {
                elem.classList.remove('requirement-met');
                elem.classList.add('requirement-unmet');
                icon.classList.remove('fa-check');
                icon.classList.add('fa-circle');
            }
        }

        function updateStrengthMeter() {
            const value = newPassword.value;
            const metRequirements = Object.values(requirements).filter(r => r.test(value)).length;
            const strength = metRequirements / Object.keys(requirements).length;

            strengthMeter.className = 'password-strength-fill';

            if (strength >= 1) {
                strengthMeter.classList.add('strength-strong');
            } else if (strength >= 0.6) {
                strengthMeter.classList.add('strength-medium');
            } else if (strength > 0) {
                strengthMeter.classList.add('strength-weak');
            }
        }

        newPassword.addEventListener('input', function() {
            const value = this.value;

            Object.entries(requirements).forEach(([key, req]) => {
                checkRequirement(req.id, req.test(value));
            });

            updateStrengthMeter();
        });

        // Form validation
        document.getElementById('passwordForm').addEventListener('submit', function(e) {
            const newPass = newPassword.value;
            const confirmPass = document.getElementById('confirm_password').value;

            if (newPass !== confirmPass) {
                e.preventDefault();
                alert('Has≈Ça nie sƒÖ identyczne!');
            }
        });
    </script>
</body>
</html>
